###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      30/Oct/2015  09:58:14 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\src\hal\s2w_cert_mgmt.c                       #
#    Command line =  E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\src\hal\s2w_cert_mgmt.c -D                    #
#                    TX_ENABLE_IAR_LIBRARY_SUPPORT -D IAR -D FIXED_ROM_BUILD  #
#                    -D RUN_ALL_FROM_FLASH -D TM_USE_HTTPD -D S2W_DNS_CLIENT  #
#                    -D NX_INCLUDE_USER_DEFINE_FILE -D S2W_WEB_FS_AVAILABLE   #
#                    -D S2W_EXTFLASH_DRIVER_TEST -D S2W_PWM_SUPPORT -D        #
#                    S2W_MEM_ACCESS -D S2W_FORCE_UART_PORT -D                 #
#                    S2W_EXT_FLASH_FWUP_PUSH_METHOD -D                        #
#                    S2W_NCM_SUPPORT_ENABLE -D S2W_SECURITY_ENTERPRISE_PEAP_V #
#                    0_AVAILABLE -D S2W_EXT_FLASH_FWUP_PULL_METHOD -D         #
#                    S2W_SECURITY_ENTERPRISE_TLS_AVAILABLE -D                 #
#                    S2W_DNS_SERVER_ENABLE -D ADK_OTAFU -D S2W_GSLINK_RAW -D  #
#                    S2W_GSLINK_XML -D S2W_SECURITY_ENTERPRISE_PEAP_V1_AVAILA #
#                    BLE -D S2W_PING_TRACE -D S2W_RF_TEST -D                  #
#                    S2W_SSL_CLIENT_SUPPORT -D S2W_DEFAULT_UART_PARITY=0 -D   #
#                    S2W_DHCP_SERVER_ENABLE -D S2W_SECURITY_WPS_ENABLE -D     #
#                    ADK_PROV_CONFIG_LIMITED_AP -D S2W_WEB_SERVER -D          #
#                    ADK_PROV -D S2W_DEFAULT_UART_SW_FLOW=0 -D                #
#                    S2W_FILE_UPLOAD_API -D S2W_COAP_SUPPORT -D               #
#                    S2W_HTTPD_SSLCERT_UPLOAD -D                              #
#                    S2W_DEFAULT_UART_STOP_BITS=0 -D S2W_FACT_IMAGE_REQ -D    #
#                    S2W_DEFAULT_UART_BAUD=9600 -D S2W_ASYNC_MSG -D           #
#                    S2W_HTTPS_SUPPORT -D S2W_DEFAULT_UART_HW_FLOW=0 -D       #
#                    S2W_SECURITY_ENTERPRISE_FAST_GTC_AVAILABLE -D            #
#                    S2W_WEB_PROV -D S2W_UNASSOC_TXRX_SUPPORT -D S2W_SNTP -D  #
#                    S2W_UART_ENABLE -D S2W_GSLINK_XMLNESTED_PARSER -D        #
#                    S2W_GSLINK -D S2W_SECURITY_ENTERPRISE_TTLS_AVAILABLE -D  #
#                    S2W_ADC_SUPPORT -D S2W_HTTPC_SUPPORT -D                  #
#                    S2W_SECURITY_ENTERPRISE_FAST_MSCHAPV2_AVAILABLE -D       #
#                    S2W_SSL_SERVER_SUPPORT -D ADK_PROV_CONFIG_CLIENT -D      #
#                    S2W_DEFAULT_UART_BITS_PER_CHAR=3 -D S2W_MDNS_ENABLE -lC  #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\Debug\List\ -lA                         #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\Debug\List\ --diag_suppress             #
#                    Pa050,Pe231,Pe177 -o E:\Gainspan\gs2011mxx_SDK_s2w_tls_t #
#                    lslp_5.1.5_GA\userapps_mqtt\s2w\build\Debug\Obj\         #
#                    --debug --endian=little --cpu=Cortex-M3 -e --fpu=None    #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA #
#                    \userapps_mqtt\s2w\build\..\..\..\geps\inc\ -I           #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\core\ -I              #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\drivers\ -I           #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\modules\ -I           #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\rtos\ -I              #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\netx\ -I              #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\netx\netx_bsd_layer\  #
#                    -I E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\user #
#                    apps_mqtt\s2w\build\..\..\..\geps\inc\main\ -I           #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\fs\ -I                #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\fs\hcc\src\ -I        #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\security\src\ -I      #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\geps\inc\security\hw_engine_if #
#                    \ -I E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\us #
#                    erapps_mqtt\s2w\build\..\..\..\geps\inc\security\wpa_if\ #
#                     -I E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\use #
#                    rapps_mqtt\s2w\build\..\..\..\userlib\ncm\inc\ -I        #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\userlib\ -I                    #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\ctx\ -I                          #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\ -I                              #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\main\ -I                         #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\hal\ -I                          #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\parser\ -I                       #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\config\ -I                       #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\src\ -I                              #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\adk\otafu\inc\ -I              #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\..\..\adk\provisioning\inc\ -I       #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\mqtt\ -I                         #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\src\mqtt\ -I                         #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\one_wire\ -I                     #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\src\one_wire\ -I                     #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\linked_list\ -I                  #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\src\linked_list\ -I                  #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\inc\mqtt_main\ -I                    #
#                    E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\..\src\mqtt_main\ -Ohz                  #
#                    --use_c++_inline -I "C:\Program Files (x86)\IAR          #
#                    Systems\Embedded Workbench 6.5\arm\CMSIS\Include\"       #
#    List file    =  E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\Debug\List\s2w_cert_mgmt.lst            #
#    Object file  =  E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapp #
#                    s_mqtt\s2w\build\Debug\Obj\s2w_cert_mgmt.o               #
#                                                                             #
#                                                                             #
###############################################################################

E:\Gainspan\gs2011mxx_SDK_s2w_tls_tlslp_5.1.5_GA\userapps_mqtt\s2w\src\hal\s2w_cert_mgmt.c
      1          /*****************************************************************
      2           *
      3          *               COPYRIGHT (c) 2009-2010 GainSpan Corporation
      4          *                         All Rights Reserved
      5          *
      6          * The source code contained or described herein and all documents
      7          * related to the source code ("Material") are owned by GainSpan
      8          * Corporation or its licensors.  Title to the Material remains
      9          * with GainSpan Corporation or its suppliers and licensors.
     10          *
     11          * The Material is protected by worldwide copyright and trade secret
     12          * laws and treaty provisions. No part of the Material may be used,
     13          * copied, reproduced, modified, published, uploaded, posted, transmitted,
     14          * distributed, or disclosed in any way except in accordance with the
     15          * applicable license agreement.
     16          *
     17          * No license under any patent, copyright, trade secret or other
     18          * intellectual property right is granted to or conferred upon you by
     19          * disclosure or delivery of the Materials, either expressly, by
     20          * implication, inducement, estoppel, except in accordance with the
     21          * applicable license agreement.
     22          *
     23          * Unless otherwise agreed by GainSpan in writing, you may not remove or
     24          * alter this notice or any other notice embedded in Materials by GainSpan
     25          * or GainSpan's suppliers or licensors in any way.
     26          *
     27          * $RCSfile: s2w_cert_mgmt.c,v $
     28          *
     29          * Description : 
     30          ******************************************************************/
     31          
     32          
     33          /*****************************************************************
     34            * File Inclusions
     35            *****************************************************************/
     36          
     37          #include "gsn_includes.h"
     38          #include "hal/s2w_cert_mgmt.h"
     39          #include "hal/s2w_types.h"
     40          #include "fs/api/api_safe.h"
     41          #include "main/app_main_ctx.h"
     42          #include "hal/s2w_hal.h"
     43          extern APP_MAIN_CTX_T *s2wappMainTaskCtxt;
     44          

   \                                 In section .bss, align 4
     45          S2W_SSL_CERT_SRAM_TABLE_T s2w_ssl_cert_table[S2W_MAX_NUM_CERT];
   \                     s2w_ssl_cert_table:
   \   00000000                      DS8 96
     46          

   \                                 In section .text, align 2, keep-with-next
     47          PUBLIC INT32
     48          S2wCert_MemAlloc (UINT16 size)
     49          {
   \                     S2wCert_MemAlloc:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     50          	UINT32 i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x250C             MOVS     R5,#+12
   \   00000006   0x....             LDR.N    R6,??DataTable11_2
     51          	UINT8 *pBuf;
     52          	while (i < S2W_MAX_NUM_CERT)
     53              {
     54                  if (!s2w_ssl_cert_table[i].certAddress)
   \                     ??S2wCert_MemAlloc_0:
   \   00000008   0xFB05 0x6104      MLA      R1,R5,R4,R6
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0xB111             CBZ.N    R1,??S2wCert_MemAlloc_1
     55                      break;
     56                  i++;
   \   00000010   0x1C64             ADDS     R4,R4,#+1
     57              }
   \   00000012   0x2C08             CMP      R4,#+8
   \   00000014   0xD3F8             BCC.N    ??S2wCert_MemAlloc_0
     58          	if(i == S2W_MAX_NUM_CERT)
   \                     ??S2wCert_MemAlloc_1:
   \   00000016   0x2C08             CMP      R4,#+8
   \   00000018   0xD005             BEQ.N    ??S2wCert_MemAlloc_2
     59          	{
     60          		return -1;
     61          	}
     62              pBuf = gsn_malloc(size + 2);
   \   0000001A   0x2200             MOVS     R2,#+0
   \   0000001C   0x213E             MOVS     R1,#+62
   \   0000001E   0x1C80             ADDS     R0,R0,#+2
   \   00000020   0x.... 0x....      BL       GsnDynMemMgmt_Alloc
     63                  if(pBuf == NULL)
   \   00000024   0xB900             CBNZ.N   R0,??S2wCert_MemAlloc_3
     64                      return -1;
   \                     ??S2wCert_MemAlloc_2:
   \   00000026   0x....             B.N      ?Subroutine0
     65              s2w_ssl_cert_table[i].certAddress = pBuf;
   \                     ??S2wCert_MemAlloc_3:
   \   00000028   0xFB05 0x6104      MLA      R1,R5,R4,R6
   \   0000002C   0x6008             STR      R0,[R1, #+0]
     66              return i;
   \   0000002E   0x4620             MOV      R0,R4
   \   00000030   0xBD70             POP      {R4-R6,PC}       ;; return
     67          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0xF04F 0x30FF      MOV      R0,#-1
   \   00000004   0xBD70             POP      {R4-R6,PC}
     68          

   \                                 In section .text, align 2, keep-with-next
     69          PUBLIC GSN_STATUS
     70          S2wCert_MemFree(UINT8 *name)
     71          {
   \                     S2wCert_MemFree:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4680             MOV      R8,R0
     72          	UINT32 index = 0;
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x....             LDR.N    R6,??DataTable11_2
     73          	while(index < S2W_MAX_NUM_CERT)
     74          	{
     75          		if(!strcmp((const char *)s2w_ssl_cert_table[index].name, (const char *)name))
   \                     ??S2wCert_MemFree_0:
   \   0000000A   0x200C             MOVS     R0,#+12
   \   0000000C   0xFB00 0xF705      MUL      R7,R0,R5
   \   00000010   0x19BC             ADDS     R4,R7,R6
   \   00000012   0x4641             MOV      R1,R8
   \   00000014   0x6860             LDR      R0,[R4, #+4]
   \   00000016   0x.... 0x....      BL       strcmp
   \   0000001A   0xB948             CBNZ.N   R0,??S2wCert_MemFree_1
     76          		{
     77          			gsn_free (s2w_ssl_cert_table[index].certAddress);
   \   0000001C   0x59B8             LDR      R0,[R7, R6]
   \   0000001E   0x.... 0x....      BL       GsnDynMemMgmt_Free
     78          			/* Marking the SRAM entry as Invalid */
     79                      gsn_free(s2w_ssl_cert_table[index].name);
   \   00000022   0x6860             LDR      R0,[R4, #+4]
   \   00000024   0x.... 0x....      BL       GsnDynMemMgmt_Free
     80                      s2w_ssl_cert_table[index].name = NULL;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x6060             STR      R0,[R4, #+4]
     81                      s2w_ssl_cert_table[index].certAddress = NULL;
   \   0000002C   0x51B8             STR      R0,[R7, R6]
     82                      return GSN_SUCCESS;
   \   0000002E   0xE004             B.N      ??S2wCert_MemFree_2
     83          		}
     84          		index++;
   \                     ??S2wCert_MemFree_1:
   \   00000030   0x1C6D             ADDS     R5,R5,#+1
     85          	}
   \   00000032   0x2D08             CMP      R5,#+8
   \   00000034   0xD3E9             BCC.N    ??S2wCert_MemFree_0
     86          	return GSN_FAILURE;
   \   00000036   0xF04F 0x4000      MOV      R0,#-2147483648
   \                     ??S2wCert_MemFree_2:
   \   0000003A   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
     87          }
     88          

   \                                 In section .text, align 2, keep-with-next
     89          PUBLIC INT32
     90          S2wCert_SearchRamTable(char *ptr)
     91          {
   \                     S2wCert_SearchRamTable:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
     92              INT32 i = 0;
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0x....             LDR.N    R6,??DataTable11_2
     93              while(i < S2W_MAX_NUM_CERT)
     94              {
     95                   //S2w_Printf("name: %s\n\r", s2w_ssl_cert_table[i].cert.name);
     96                   if( !strcmp((const char *)s2w_ssl_cert_table[i].name, ptr))
   \                     ??S2wCert_SearchRamTable_0:
   \   00000008   0x200C             MOVS     R0,#+12
   \   0000000A   0xFB00 0x6005      MLA      R0,R0,R5,R6
   \   0000000E   0x4621             MOV      R1,R4
   \   00000010   0x6840             LDR      R0,[R0, #+4]
   \   00000012   0x.... 0x....      BL       strcmp
   \   00000016   0xB110             CBZ.N    R0,??S2wCert_SearchRamTable_1
     97                   {
     98                       /* certificate found */
     99                       //S2w_Printf("found\n\r");
    100                       break;
    101                   }
    102                   i++;
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
    103              }
   \   0000001A   0x2D08             CMP      R5,#+8
   \   0000001C   0xDBF4             BLT.N    ??S2wCert_SearchRamTable_0
    104           	if (i == S2W_MAX_NUM_CERT) {
   \                     ??S2wCert_SearchRamTable_1:
   \   0000001E   0x2D08             CMP      R5,#+8
   \   00000020   0xBF08             IT       EQ 
   \   00000022   0xF04F 0x35FF      MOVEQ    R5,#-1
    105          
    106          		i = -1;
    107          	}
    108          	return i;
   \   00000026   0x4628             MOV      R0,R5
   \   00000028   0xBD70             POP      {R4-R6,PC}       ;; return
    109          
    110          }
    111          

   \                                 In section .text, align 2, keep-with-next
    112          INT32
    113          S2wCert_SearchFlash(char *ptr)
    114          {
   \                     S2wCert_SearchFlash:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    115          	F_FILE *fd;
    116              if(!s2wappMainTaskCtxt->fsInit)
   \   00000002   0x....             LDR.N    R6,??DataTable11_3
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x6830             LDR      R0,[R6, #+0]
   \   00000008   0xF248 0x1570      MOVW     R5,#+33136
   \   0000000C   0x5C28             LDRB     R0,[R5, R0]
   \   0000000E   0xB918             CBNZ.N   R0,??CrossCallReturnLabel_2
    117              {
    118          		App_FsInit();
   \   00000010   0x.... 0x....      BL       App_FsInit
    119          		s2wappMainTaskCtxt->fsInit = TRUE;
   \   00000014   0x.... 0x....      BL       ?Subroutine1
    120                  f_enterFS();
    121          	}
    122          	f_chdir("certs");
   \                     ??CrossCallReturnLabel_2:
   \   00000018   0x.... 0x....      ADR.W    R0,`?<Constant "certs">`
   \   0000001C   0x.... 0x....      BL       fsm_chdir
    123          	fd = f_open(ptr, "r");
   \   00000020   0x....             ADR.N    R1,??DataTable11  ;; "r"
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0x.... 0x....      BL       fsm_open
   \   00000028   0x4604             MOV      R4,R0
    124          	f_chdir("..");
   \   0000002A   0x....             ADR.N    R0,??DataTable11_1  ;; 0x2E, 0x2E, 0x00, 0x00
   \   0000002C   0x.... 0x....      BL       fsm_chdir
    125          
    126          	if(fd)
   \   00000030   0xB11C             CBZ.N    R4,??S2wCert_SearchFlash_0
    127          	{
    128          		f_close(fd);
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0x.... 0x....      BL       fsm_close
    129          		return -1;
   \   00000038   0x....             B.N      ?Subroutine0
    130          	}
    131          	else
    132          	{
    133          		return 0;
   \                     ??S2wCert_SearchFlash_0:
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0xBD70             POP      {R4-R6,PC}       ;; return
    134          	}
    135          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   0x6830             LDR      R0,[R6, #+0]
   \                     ??Subroutine1_0:
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x5429             STRB     R1,[R5, R0]
   \   00000006   0x.... 0x....      B.W      fsm_enterFS
    136          

   \                                 In section .text, align 2, keep-with-next
    137          INT32
    138          S2wCert_findFile(char *name)
    139          {
   \                     S2wCert_findFile:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    140          	INT32 retVal;
    141          
    142          	retVal = S2wCert_SearchRamTable(name);
    143          	if(retVal == -1)
   \   00000004   0x.... 0x....      BL       S2wCert_SearchRamTable
   \   00000008   0xF110 0x0F01      CMN      R0,#+1
   \   0000000C   0xD103             BNE.N    ??S2wCert_findFile_0
    144          	{
    145          		return S2wCert_SearchFlash(name);
   \   0000000E   0x4620             MOV      R0,R4
   \   00000010   0xE8BD 0x4010      POP      {R4,LR}
   \   00000014   0x....             B.N      S2wCert_SearchFlash
    146          	}
    147          	else
    148          	{
    149          		return -1;
   \                     ??S2wCert_findFile_0:
   \   00000016   0xF04F 0x30FF      MOV      R0,#-1
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    150          	}
    151          }

   \                                 In section .text, align 2, keep-with-next
    152          PUBLIC INT32
    153          S2wCert_FlashFileLoad(char *fileName)
    154          {
   \                     S2wCert_FlashFileLoad:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB090             SUB      SP,SP,#+64
   \   00000006   0x4680             MOV      R8,R0
    155          	INT32 fileLen,index;
    156          	F_FILE *fd; 
    157          	char name[64]={0};
   \   00000008   0xA800             ADD      R0,SP,#+0
   \   0000000A   0x2140             MOVS     R1,#+64
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
    158          	if(fileName == NULL)
   \   00000010   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000014   0xBF08             IT       EQ 
   \   00000016   0xF04F 0x30FF      MOVEQ    R0,#-1
    159          		return -1;
   \   0000001A   0xD061             BEQ.N    ??S2wCert_FlashFileLoad_0
    160              if(!s2wappMainTaskCtxt->fsInit)
   \   0000001C   0x....             LDR.N    R4,??DataTable11_3
   \   0000001E   0x6820             LDR      R0,[R4, #+0]
   \   00000020   0xF248 0x1570      MOVW     R5,#+33136
   \   00000024   0x5C28             LDRB     R0,[R5, R0]
   \   00000026   0xB920             CBNZ.N   R0,??CrossCallReturnLabel_0
    161              {
    162          		App_FsInit();
   \   00000028   0x.... 0x....      BL       App_FsInit
    163          		s2wappMainTaskCtxt->fsInit = TRUE;
   \   0000002C   0x6820             LDR      R0,[R4, #+0]
   \   0000002E   0x.... 0x....      BL       ??Subroutine1_0
    164                  f_enterFS();
    165          	}
    166          	index=sprintf(name,"A:/certs/");	
   \                     ??CrossCallReturnLabel_0:
   \   00000032   0x.... 0x....      BL       ?Subroutine2
    167          	index=sprintf(name+index,fileName);	
   \                     ??CrossCallReturnLabel_4:
   \   00000036   0xAA00             ADD      R2,SP,#+0
   \   00000038   0x4641             MOV      R1,R8
   \   0000003A   0x1880             ADDS     R0,R0,R2
   \   0000003C   0x.... 0x....      BL       sprintf
    168          	fileLen = f_filelength(name);
   \   00000040   0xA800             ADD      R0,SP,#+0
   \   00000042   0x.... 0x....      BL       fsm_filelength
   \   00000046   0x4605             MOV      R5,R0
    169          	if(fileLen == -1)
   \   00000048   0xF04F 0x39FF      MOV      R9,#-1
   \   0000004C   0xF115 0x0F01      CMN      R5,#+1
   \   00000050   0xD109             BNE.N    ??S2wCert_FlashFileLoad_1
    170          	{
    171          		name[0]='B';
   \   00000052   0x2042             MOVS     R0,#+66
   \   00000054   0xF88D 0x0000      STRB     R0,[SP, #+0]
    172          		fileLen = f_filelength(name);
   \   00000058   0xA800             ADD      R0,SP,#+0
   \   0000005A   0x.... 0x....      BL       fsm_filelength
   \   0000005E   0x4605             MOV      R5,R0
    173          		if(fileLen == -1)
   \   00000060   0xF115 0x0F01      CMN      R5,#+1
   \   00000064   0xD02B             BEQ.N    ??S2wCert_FlashFileLoad_2
    174          		{					
    175          			index = -1;		
    176          			goto FlashFileLoadExit;
    177          	}
    178          	}	
    179          	index = S2wCert_MemAlloc (fileLen);
   \                     ??S2wCert_FlashFileLoad_1:
   \   00000066   0xB2A8             UXTH     R0,R5
   \   00000068   0x.... 0x....      BL       S2wCert_MemAlloc
   \   0000006C   0x4682             MOV      R10,R0
    180          	if(index != -1)
   \   0000006E   0xF11A 0x0F01      CMN      R10,#+1
   \   00000072   0xD034             BEQ.N    ??S2wCert_FlashFileLoad_3
    181          	{
    182          	s2w_ssl_cert_table[index].name = gsn_malloc(strlen(fileName) + 1);
   \   00000074   0x4640             MOV      R0,R8
   \   00000076   0x.... 0x....      BL       strlen
   \   0000007A   0x210C             MOVS     R1,#+12
   \   0000007C   0xFB01 0xF40A      MUL      R4,R1,R10
   \   00000080   0x....             LDR.N    R6,??DataTable11_2
   \   00000082   0x19A7             ADDS     R7,R4,R6
   \   00000084   0x2200             MOVS     R2,#+0
   \   00000086   0x21B6             MOVS     R1,#+182
   \   00000088   0x1C40             ADDS     R0,R0,#+1
   \   0000008A   0x.... 0x....      BL       GsnDynMemMgmt_Alloc
   \   0000008E   0x6078             STR      R0,[R7, #+4]
    183          	if(s2w_ssl_cert_table[index].name == NULL)
   \   00000090   0xB918             CBNZ.N   R0,??S2wCert_FlashFileLoad_4
    184          	{
    185          			S2wCert_MemFree(s2w_ssl_cert_table[index].certAddress);
   \   00000092   0x59A0             LDR      R0,[R4, R6]
   \   00000094   0x.... 0x....      BL       S2wCert_MemFree
    186          			index = -1; 	
   \   00000098   0xE011             B.N      ??S2wCert_FlashFileLoad_2
    187          			goto FlashFileLoadExit;
    188          	}
    189          	strcpy((char*)s2w_ssl_cert_table[index].name, fileName);
   \                     ??S2wCert_FlashFileLoad_4:
   \   0000009A   0x4641             MOV      R1,R8
   \   0000009C   0x.... 0x....      BL       strcpy
    190          	s2w_ssl_cert_table[index].location = CERT_IN_FLASH;
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x7238             STRB     R0,[R7, #+8]
    191          		fd = f_open(name, "r");
   \   000000A4   0x....             ADR.N    R1,??DataTable11  ;; "r"
   \   000000A6   0xA800             ADD      R0,SP,#+0
   \   000000A8   0x.... 0x....      BL       fsm_open
   \   000000AC   0xEA5F 0x0800      MOVS     R8,R0
    192          		if(fd == NULL)
   \   000000B0   0x59A0             LDR      R0,[R4, R6]
   \   000000B2   0xD106             BNE.N    ??S2wCert_FlashFileLoad_5
    193          	{
    194          			S2wCert_MemFree(s2w_ssl_cert_table[index].certAddress);
   \   000000B4   0x.... 0x....      BL       S2wCert_MemFree
    195          			gsn_free(s2w_ssl_cert_table[index].name);
   \   000000B8   0x6878             LDR      R0,[R7, #+4]
   \   000000BA   0x.... 0x....      BL       GsnDynMemMgmt_Free
    196          			index = -1; 	
   \                     ??S2wCert_FlashFileLoad_2:
   \   000000BE   0x46CA             MOV      R10,R9
    197          			goto FlashFileLoadExit;
   \   000000C0   0xE00D             B.N      ??S2wCert_FlashFileLoad_3
    198          		}
    199          		f_read(s2w_ssl_cert_table[index].certAddress+2, 1, fileLen, fd);
   \                     ??S2wCert_FlashFileLoad_5:
   \   000000C2   0x4643             MOV      R3,R8
   \   000000C4   0x462A             MOV      R2,R5
   \   000000C6   0x2101             MOVS     R1,#+1
   \   000000C8   0x1C80             ADDS     R0,R0,#+2
   \   000000CA   0x.... 0x....      BL       fsm_read
    200          		s2w_ssl_cert_table[index].certAddress[0] = (fileLen & 0xff);
   \   000000CE   0x59A0             LDR      R0,[R4, R6]
   \   000000D0   0x7005             STRB     R5,[R0, #+0]
    201          		s2w_ssl_cert_table[index].certAddress[1] = ((fileLen >> 8) & 0xff);
   \   000000D2   0x1229             ASRS     R1,R5,#+8
   \   000000D4   0x59A0             LDR      R0,[R4, R6]
   \   000000D6   0x7041             STRB     R1,[R0, #+1]
    202          		f_close(fd);
   \   000000D8   0x4640             MOV      R0,R8
   \   000000DA   0x.... 0x....      BL       fsm_close
    203          	}
    204          FlashFileLoadExit:
    205          	return index;
   \                     ??S2wCert_FlashFileLoad_3:
   \   000000DE   0x4650             MOV      R0,R10
   \                     ??S2wCert_FlashFileLoad_0:
   \   000000E0   0xB010             ADD      SP,SP,#+64
   \   000000E2   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    206          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2:
   \   00000000   0xA800             ADD      R0,SP,#+0
   \   00000002   0x.... 0x....      ADR.W    R1,`?<Constant "A:/certs/">`
   \   00000006   0x.... 0x....      B.W      sprintf
    207          /**
    208           ******************************************************************
    209           * @ingroup S2w-Application
    210           * @brief Process delete SSL certificate. 
    211           *   This function delete the certificate.
    212           * @param certName        pointer to to certificate name to delete
    213           * @param 0   Operation success.
    214           * @return  1  Operation failed.
    215           ******************************************************************/

   \                                 In section .text, align 2, keep-with-next
    216          PUBLIC UINT8  
    217          AppS2w_CertDelete(UINT8 *certName)
    218          {
   \                     AppS2w_CertDelete:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
   \   00000004   0x4604             MOV      R4,R0
    219              UINT8 fileName[42]={0};
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0x212C             MOVS     R1,#+44
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    220              INT32 retVal =0;
    221              UINT32 len;
    222              if(!s2wappMainTaskCtxt->fsInit)
   \   0000000E   0x....             LDR.N    R6,??DataTable11_3
   \   00000010   0x6830             LDR      R0,[R6, #+0]
   \   00000012   0xF248 0x1570      MOVW     R5,#+33136
   \   00000016   0x5C28             LDRB     R0,[R5, R0]
   \   00000018   0xB918             CBNZ.N   R0,??CrossCallReturnLabel_1
    223              {
    224          		App_FsInit();
   \   0000001A   0x.... 0x....      BL       App_FsInit
    225          		s2wappMainTaskCtxt->fsInit = TRUE;
   \   0000001E   0x.... 0x....      BL       ?Subroutine1
    226                  f_enterFS();
    227          	}
    228          	S2wCert_MemFree(certName);
   \                     ??CrossCallReturnLabel_1:
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0x.... 0x....      BL       S2wCert_MemFree
    229          	len = sprintf((char*)fileName,"A:/certs/");	
   \   00000028   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_3:
   \   0000002C   0x4605             MOV      R5,R0
    230          	memcpy(fileName+len,certName,strlen((const char *)certName));
   \   0000002E   0x4620             MOV      R0,R4
   \   00000030   0x.... 0x....      BL       strlen
   \   00000034   0x4602             MOV      R2,R0
   \   00000036   0xA800             ADD      R0,SP,#+0
   \   00000038   0x4621             MOV      R1,R4
   \   0000003A   0x1828             ADDS     R0,R5,R0
   \   0000003C   0x.... 0x....      BL       __aeabi_memcpy
    231          	retVal = f_delete((char*)fileName);
    232          	if(retVal == F_NO_ERROR)
   \   00000040   0xA800             ADD      R0,SP,#+0
   \   00000042   0x.... 0x....      BL       fsm_delete
   \   00000046   0xB100             CBZ.N    R0,??AppS2w_CertDelete_0
    233          	{
    234          		return S2W_SUCCESS; 
    235          	}
    236          	else
    237          		return S2W_FAILURE;			
   \   00000048   0x2001             MOVS     R0,#+1
   \                     ??AppS2w_CertDelete_0:
   \   0000004A   0xB00C             ADD      SP,SP,#+48
   \   0000004C   0xBD70             POP      {R4-R6,PC}       ;; return
    238          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x72 0x00          DC8      "r",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x2E 0x2E          DC8      0x2E, 0x2E, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     s2w_ssl_cert_table

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     s2wappMainTaskCtxt

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "certs">`:
   \   00000000   0x63 0x65          DC8 "certs"
   \              0x72 0x74    
   \              0x73 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "A:/certs/">`:
   \   00000000   0x41 0x3A          DC8 "A:/certs/"
   \              0x2F 0x63    
   \              0x65 0x72    
   \              0x74 0x73    
   \              0x2F 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "r">`:
   \   00000000   0x72 0x00          DC8 "r"

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "..">`:
   \   00000000   0x2E 0x2E          DC8 ".."
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000031   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>_1`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      64   AppS2w_CertDelete
        64   -> App_FsInit
        64   -> S2wCert_MemFree
        64   -> __aeabi_memclr4
        64   -> __aeabi_memcpy
        64   -> fsm_delete
        64   -> fsm_enterFS
        64   -> sprintf
        64   -> strlen
      96   S2wCert_FlashFileLoad
        96   -> App_FsInit
        96   -> GsnDynMemMgmt_Alloc
        96   -> GsnDynMemMgmt_Free
        96   -> S2wCert_MemAlloc
        96   -> S2wCert_MemFree
        96   -> __aeabi_memclr4
        96   -> fsm_close
        96   -> fsm_enterFS
        96   -> fsm_filelength
        96   -> fsm_open
        96   -> fsm_read
        96   -> sprintf
        96   -> strcpy
        96   -> strlen
      16   S2wCert_MemAlloc
        16   -> GsnDynMemMgmt_Alloc
      24   S2wCert_MemFree
        24   -> GsnDynMemMgmt_Free
        24   -> strcmp
      16   S2wCert_SearchFlash
        16   -> App_FsInit
        16   -> fsm_chdir
        16   -> fsm_close
        16   -> fsm_enterFS
        16   -> fsm_open
      16   S2wCert_SearchRamTable
        16   -> strcmp
       8   S2wCert_findFile
         0   -> S2wCert_SearchFlash
         8   -> S2wCert_SearchRamTable


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "..">
      12  ?<Constant "A:/certs/">
       8  ?<Constant "certs">
       2  ?<Constant "r">
      64  ?<Constant {0}>
      44  ?<Constant {0}>_1
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       6  ?Subroutine0
      10  ?Subroutine1
      10  ?Subroutine2
      78  AppS2w_CertDelete
     230  S2wCert_FlashFileLoad
      50  S2wCert_MemAlloc
      62  S2wCert_MemFree
      62  S2wCert_SearchFlash
      42  S2wCert_SearchRamTable
      28  S2wCert_findFile
      96  s2w_ssl_cert_table

 
  96 bytes in section .bss
 114 bytes in section .rodata
 614 bytes in section .text
 
 614 bytes of CODE  memory
 114 bytes of CONST memory
  96 bytes of DATA  memory

Errors: none
Warnings: none
