#ifndef _GSN_FACTORY_DFLT_H_
#define _GSN_FACTORY_DFLT_H_

#include "gsn_includes.h"

typedef enum GSN_FACT_DFLT_ID
{
	GSN_FACT_DFLT_MAC_ID = 1, 			
	GSN_FACT_DFLT_PROV_SSID_ID, 			
	GSN_FACT_DFLT_PROV_CHANNEL_ID, 		
	GSN_FACT_DFLT_PROV_SECURITY_ID, 		
	GSN_FACT_DFLT_PROV_WEP_INDEX_ID,	
	GSN_FACT_DFLT_PROV_WEP_KEY_ID, 		
	GSN_FACT_DFLT_PROV_PASSPHRASE_ID, 	
	GSN_FACT_DFLT_USER_NAME_ID, 		
	GSN_FACT_DFLT_PASSWORD_ID, 		
	GSN_FACT_DFLT_MANUFACTURER_ID, 	
	GSN_FACT_DFLT_MODEL_NUMER_ID, 	
	GSN_FACT_DFLT_MODEL_TYPE_ID,
	GSN_FACT_DFLT_DEVICE_NAME_ID,
    GSN_FACT_DFLT_HOST_NAME_ID,
    GSN_FACT_DFLT_SERIAL_NUMBER_ID,
    GSN_FACT_DFLT_BITMAP_ID,
	GSN_FACT_DFLT_MAX_ID
}GSN_FACT_DFLT_ID_T;

typedef struct GSN_FACT_DFLT_ELEMENT
{
	UINT8 chkSum;
	UINT8 id;
	UINT8 len;
	UINT8 pVal[1];
}GSN_FACT_DFLT_ELEMENT_T;

typedef enum GSN_FACT_DFLT_LOC
{
	GSN_FACT_DFLT_LOC_IN_FLASH,
	GSN_FACT_DFLT_LOC_IN_OTP,
}GSN_FACT_DFLT_LOC_T;

GSN_FACT_DFLT_ELEMENT_T *
GsnFactDflt_ElementGet(GSN_FACT_DFLT_ID_T);

VOID GsnFactDflt_Init(GSN_OTP_T *pOtp);

VOID GsnFactDflt_Deinit();

#endif







